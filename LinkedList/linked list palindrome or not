/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head==null || head.next==null) return true;
        List<Integer> l= new ArrayList<>();
        
        ListNode tem=head;
        while(tem!=null){
            l.add(tem.val);
            tem=tem.next;
        }
        int start=0;
        int end=l.size()-1;
        while(start<end){
            if(l.get(start)!=l.get(end)) return false;
            start++;
            end--;

        }
        return true;
        
    }
}
